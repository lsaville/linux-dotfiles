# {n}vim compability
set -g default-terminal "xterm-256color"
#set-option -ga terminal-overrides ",xterm-256color:Tc"
set -as terminal-overrides ',xterm*:Tc:sitm=\E[3m'
# set -g default-terminal "tmux-256color"
# set -ag terminal-overrides ",xterm-256color:RGB"
# set -g default-terminal "alacritty"
# set -ag terminal-overrides ",alacritty:RGB"

# Give mo scrollback (default is 2k)
set -g history-limit 10000

# Resize panes
#bind-key -n M-j resize-pane -D 5
#bind-key -n M-k resize-pane -U 5
#bind-key -n M-h resize-pane -L 5
#bind-key -n M-l resize-pane -R 5

# Change prefix
unbind C-b
set -g prefix C-s
bind-key -r C-s send-prefix

# resource conf
bind-key r source-file ~/.tmux.conf

# Make command-line like default bash
set-option -g status-keys emacs

set -g pane-active-border-style bg=default,fg=red
set -g pane-border-style fg=magenta

set -g status-bg colour235 #base02
set -g status-fg colour130 #yellow
#set -g status-style fg=#e9eef9,bg=#504A83
#set -g mode-style fg=#e9eef9,bg=#6c6c80
#set -g mode-style fg=#e9eef9,bg=#5F6183
set -g mode-style fg=#e9eef9,bg=#504A83

set -g status-left-length 50

#set -g status-right " #(battery -t) #(date ‘+%a, %b %d - %I:%M’) "

set -g mouse on

# Bring back clear screen under tmux prefix
bind C-l send-keys 'C-l'

# Use current path for new splits/window
bind '%' split-window -h -c '#{pane_current_path}'
bind '"' split-window -v -c '#{pane_current_path}'
bind c new-window -c '#{pane_current_path}'

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup copy mode selections to mimic vim
bind-key -T copy-mode-vi 'v' send -X begin-selection
#bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel
bind-key -T copy-mode-vi 'y' send -X copy-pipe-no-clear "xclip -sel clip -i"

# This was the old version that required the use of the original script tmux-vim-select-pane
# # Smart pane switching with awareness of vim splits
#bind -n C-k run-shell 'tmux-vim-select-pane -U'
#bind -n C-j run-shell 'tmux-vim-select-pane -D'
#bind -n C-h run-shell 'tmux-vim-select-pane -L'
#bind -n C-l run-shell 'tmux-vim-select-pane -R'
#bind -n "C-\\" run-shell 'tmux-vim-select-pane -l'
## 
## # Smart pane switching in copy-mode
#bind-key -T copy-mode-vi C-k run-shell 'tmux-vim-select-pane -U'
#bind-key -T copy-mode-vi C-j run-shell 'tmux-vim-select-pane -D'
#bind-key -T copy-mode-vi C-h run-shell 'tmux-vim-select-pane -L'
#bind-key -T copy-mode-vi C-l run-shell 'tmux-vim-select-pane -R'
#bind-key -T copy-mode-vi "C-\\" run-shell 'tmux-vim-select-pane -l'

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
